          echo "DEBUG=${{ secrets.DEBUG }}" > .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> .env
          echo "CSRF_TRUSTED_ORIGINS=${{ secrets.CSRF_TRUSTED_ORIGINS }}" >> .env
          echo "DB_ENGINE=${{ secrets.DB_ENGINE }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

          cd infra

          docker-compose -f docker-compose.production.yml down
          docker-compose -f docker-compose.production.yml pull
          docker-compose -f docker-compose.production.yml up -d
          if [[ "$?" -ne 0 ]]; then echo "Error starting containers" && exit 1; fi

          docker-compose -f docker-compose.production.yml exec backend python manage.py makemigrations users
          if [[ "$?" -ne 0 ]]; then echo "Error creating users migrations" && exit 1; fi

          docker-compose -f docker-compose.production.yml exec backend python manage.py makemigrations api
          if [[ "$?" -ne 0 ]]; then echo "Error creating api migrations" && exit 1; fi

          docker-compose -f docker-compose.production.yml exec backend python manage.py makemigrations recipes
          if [[ "$?" -ne 0 ]]; then echo "Error creating recipes migrations" && exit 1; fi

          docker-compose -f docker-compose.production.yml exec backend python manage.py migrate
          if [[ "$?" -ne 0 ]]; then echo "Error running migrate command" && exit 1; fi

          docker-compose -f docker-compose.production.yml exec backend python manage.py loaddata data/dump.json
          if [[ "$?" -ne 0 ]]; then echo "Error loading the data from dump.json" && exit 1; fi